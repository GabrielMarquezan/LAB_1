Exercício 1:

#include <stdio.h>
#include <math.h>

double determinante(double matriz[3][3]);

int main()
{
    double matriz[3][3] = {{2, 0, 1}, {-2, 1, 3}, {4, 2, 5}};
    printf("%lf\n", determinante(matriz));
}

double determinante(double matriz[3][3])
{
    double cofator_a, cofator_b, cofator_c, det_total;
    double det1 = matriz[1][1] * matriz[2][2];
    double det2 = matriz[1][2] * matriz[2][1];
    
    cofator_a = pow(-1, 2) * (det1 - det2);

    det1 = matriz[1][0] * matriz[2][2];
    det2 = matriz[1][2] * matriz[2][0];
    
    cofator_b = pow(-1, 3) * (det1 - det2);
    
    det1 = matriz[1][0] * matriz[2][1];
    det2 = matriz[1][1] * matriz[2][0];
    
    cofator_c = pow(-1, 4) * (det1 - det2);
    
    det_total = matriz[0][0] * cofator_a + matriz[0][1] * cofator_b + matriz[0][2] * cofator_c;

    return det_total;
}

Exercício 2:

#include <stdio.h>
#include <stdbool.h>

char ganhador(char matriz[3][3]);
bool verifica(char vetor[3]);
char linhas(char matriz[3][3]);
char colunas(char matriz[3][3]);
char diagonais(char matriz[3][3]);
void desenha_jogo(char matriz[3][3]);
void resultado_jogo(char matriz[3][3]);

int main()
{
    char jogo[3][3] = {{'X', 'O', 'X'}, {'O', 'X', 'X'}, {'X', 'O', 'O'}};
    
    resultado_jogo(jogo);
}


void resultado_jogo(char matriz[3][3])
{
    char vencedor = ganhador(matriz);
    desenha_jogo(matriz);
    
    if(vencedor != ' ' && vencedor != 'E')
    {
        printf("Vencedor: %c\n", ganhador(matriz));
    }
    else if(vencedor == ' ')
    {
        printf("Jogo incompleto\n");
    }
    else
    {
        printf("Houve empate\n");
    }
}

char ganhador(char matriz[3][3])
{
    for(int i = 0; i < 3; i++)
    {
        for(int j = 0; j < 3; j++)
        {
            if(matriz[i][j] == ' ')
            {
                return ' ';
            }
        }
    }
    
    char vitorioso[3] = {linhas(matriz), colunas(matriz), diagonais(matriz)};

    for(int i = 0; i < 3; i++)
    {
        if(vitorioso[i] != ' ')
        {
            return vitorioso[i];
        }
    }

    return 'E';
}

bool verifica(char vetor[3])
{
    if(vetor[0] == vetor[1] && vetor[0] == vetor[2])
    {
        return true;
    }
    
    return false;
}

char linhas(char matriz[3][3])
{
    char aux[3];

    for(int i = 0; i < 3; i++)
    {
        for(int j = 0; j < 3; j++)
        {
            aux[j] = matriz[i][j];
        }

        if(verifica(aux))
        {
            return aux[0];
        }
    }
    return ' ';
}

char colunas(char matriz[3][3])
{
    char aux[3];

    for(int i = 0; i < 3; i++)
    {
        for(int j = 0; j < 3; j++)
        {
            aux[j] = matriz[j][i];
        }

        if(verifica(aux))
        {
            return aux[0];
        }
    }
    return ' ';
}

char diagonais(char matriz[3][3])
{
    char aux[3];
    int j = 0;

    for(int i = 0; i < 3; i++)
    {
        aux[i] = matriz[i][i];
        
        if(verifica(aux))
        {
            return aux[0];
        }
    }void desenha_jogo(char matriz[3][3]);

    for(int i = 2; i >= 0; i--)
    {
        aux[i] = matriz[j][i];

        if(verifica(aux))
        {
            return aux[0];
        }

        j++;
    }

    return ' ';
}

void desenha_jogo(char matriz[3][3])
{
    printf("—————————————\n");

    for(int i = 0; i < 3; i++)
    {
        for(int j = 0; j < 3; j++)
        {
            printf("| %c ", matriz[i][j]);
        }

        printf("|\n");
        printf("—————————————\n");
    }
    printf("\n");
}
